const { Telegraf, Markup } = require("telegraf"); //  –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Telegraf –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞: Telegraf –∏ MArkup –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–Ω–æ–ø–æ–∫.
const bot = new Telegraf("8293335278:AAGxo36CxmD31rlnf7MV4xqs5TTF6QhHj7w"); //–¢–æ–∫–µ–Ω Telegram bota.
const fs = require("fs"); //–ú–æ–¥—É–ª—å fs –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π.
const subscribersFile = "./subscribers.json"; // JSON —Ñ–∞–∏–ª —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤–µ–¥—ë—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞.
let subscribers = new Set(); // —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—É—Å—Ç–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ (Set) –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.
if (fs.existsSync(subscribersFile)) {
  //–ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ subscribersFile.
  const saved = JSON.parse(fs.readFileSync(subscribersFile)); //–ï—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å, –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —á–∏—Ç–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é fs.readFileSync(subscribersFile) (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞).
  subscribers = new Set(saved); //–≠—Ç–æ—Ç –º–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Set, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤).
}

function saveSubscribers() {
  fs.writeFileSync(subscribersFile, JSON.stringify(Array.from(subscribers)));
}

bot.start((ctx) => {
  if (!subscribers.has(ctx.chat.id)) {
    subscribers.add(ctx.chat.id);
    saveSubscribers();
  }
  return ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name || "–¥—Ä—É–≥"}! –Ø —Ç–≤–æ–π –±–æ—Ç.`,
    Markup.keyboard([
      ["–ü–æ–º–æ—â—å", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"],
      ["–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–°–≤—è–∑–∞—Ç—å—Å—è"],
    ]).resize()
  );
});

bot.hears("–ü–æ–º–æ—â—å", (ctx) => {
  ctx.reply(
    "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n/start ‚Äî –Ω–∞—á–∞—Ç—å\n/help ‚Äî –ø–æ–º–æ—â—å\n–ò –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ...\n–ù–∞—Å—Ç—Ä–æ–π–∫–∞ üëâ–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ‚úÖ"
  );
});

bot.hears("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", (ctx) => {
  ctx.reply("–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –¥–ª—è –∑–∞—è–≤–æ–∫");
});

// bot.hears("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", (ctx) => {
//   ctx.reply("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.");
// });

//–ù–∞—Å—Ç—Ä–æ–π–∫–∏ 1) –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è || –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è . 2) –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ .
bot.hears("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", (ctx) => {
  const userId = ctx.from.id;
  if (subscribers.has(userId)) {
    ctx.reply(
      "–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã. –ú–æ–∂–µ—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.",
      Markup.inlineKeyboard([
        Markup.button.callback("–û—Ç–ø–∏—Å–∞—Ç—å—Å—è ‚ùå", "unsubscribe"),
      ])
    );
  } else {
    ctx.reply(
      "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã. –ú–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.",
      Markup.inlineKeyboard([
        Markup.button.callback("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ‚úÖ", "subscribe"),
      ])
    );
  }
});

bot.action("subscribe", (ctx) => {
  const userId = ctx.from.id;
  if (!subscribers.has(userId)) {
    subscribers.add(userId);
    saveSubscribers(subscribers);
    ctx.editMessageText("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å.‚úÖ");
  } else {
    ctx.answerCbQuery("–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã. ‚úÖ");
  }
});

bot.action("unsubscribe", (ctx) => {
  const userId = ctx.from.id;
  if (subscribers.has(userId)) {
    subscribers.delete(userId);
    saveSubscribers(subscribers);
    ctx.editMessageText("–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å.");
  } else {
    ctx.answerCbQuery("–í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã.");
  }
});
//–°–≤—è–∑–∞—Ç—å—Å—è
bot.hears("–°–≤—è–∑–∞—Ç—å—Å—è", (ctx) => {
  ctx.reply("–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π —á–µ—Ä–µ–∑ . –ü–æ–¥–¥–µ—Ä–∂–∫—É");
});

//TEST

//TEST//TEST//TEST//TEST//TEST

bot.help((ctx) => ctx.reply("–ß—Ç–æ —è —É–º–µ—é:\n/start ‚Äì –Ω–∞—á–∞—Ç—å\n/help ‚Äì –ø–æ–º–æ—â—å"));

bot.on("text", (ctx) => ctx.reply(`–¢—ã –Ω–∞–ø–∏—Å–∞–ª: ${ctx.message.text}`));

bot.launch();

module.exports = bot;
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
